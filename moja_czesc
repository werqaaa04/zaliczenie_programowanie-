import tkinter as tk
from tkinter import messagebox

class QuizApp:
    def __init__(self, master):
        self.master = master
        self.master.title("Quiz - Typ Studenta")

        self.pytania = [
            "1. Dlaczego jesteś na tych studiach?",
            "2. Jak często wychodzisz ze znajomymi?",
            "3. Jak często prosisz o notatki z zajęć?",
            "4. Jak szybko zdajesz egzaminy i kolokwia?",
            "5. Czy dobrze się uczysz?",
            "6. Kiedy zaczynasz naukę do zaliczenia?",
            "7. Jakie masz podejście do egzaminów na studiach?",
            "8. Jak często zdarza ci się zasnąć na zajęciach?",
            "9. Jakie jest twoje podejście do pracy zespołowej?",
            "10. Jak reagujesz na trudności w nauce?",
            "11. Ilu zeszytów potrzebujesz?",
            "12. Kiedy wykonujesz zadane projekty?",
            "13. Jak oceniasz swoją organizację czasu?",
            "14. Jak często korzystasz z korepetycji lub pomocy dodatkowej?"
        ]

        self.odpowiedzi = [
            ["a) Bo mama mi kazała", "b) Dla zniżek studenckich", "c) Chcę dobrze zarabiać", "d) To moje powołanie"],
            ["a) Codziennie", "b) Raz w tygodniu", "c) Raz czy dwa w miesiącu", "d) Raz w semestrze"],
            ["a) Jakie notatki? Trzeba coś notować?", "b) Mój kolega pisze wszystko za mnie", "c) Tylko gdy sam nie mogłem być na zajęciach", "d) To ja wysyłam notatki innym"],
            ["a) Brakuje dla mnie terminów", "b) 3 terminy wystarczają", "c) Zdarzyło mi się poprawiać", "d) Jeszcze nigdy nic nie musiałem/am poprawiać"],
            ["a) Nie", "b) Byleby zdać", "c) Wystarczająco dobrze", "d) Tak"],
            ["a) Nie uczę się, spisuję od kolegi obok", "b) Wieczór przed coś poczytam, reszta na logikę", "c) Tydzień przed", "d) Systematycznie od początku semestru"],
            ["a) Nie wystarczy, że muszę chodzić na ćwiczenie? Po co te egzaminy?", "b) Nie uczę się, biorę na logikę", "c) Zakuć, zdać, zapomnieć", "d) Od tego zależy cała moja przyszłość"],
            ["a) Pojawiam się i od razu zasypiam", "b) Jestem tylko człowiekiem", "c) Zdarzyło mi się raz czy dwa", "d) Nigdy w życiu, zawsze uważnie słucham i notuję"],
            ["a) Pojawiam się na początku i na końcu, bardziej przeszkadzam niż pomagam", "b) Robię najmniej", "c) Wolę pracować samodzielnie, ale potrafię dostosować się do zespołu", "d) Lubię współpracować z innymi i dzielić się pomysłami"],
            ["a) Nie mam trudności bo się nie uczę", "b) Wychodzę z założenia, że uda mi się ściągnąć", "c) Zazwyczaj ignoruję trudności, liczę na lepsze czasy", "d) Szukam dodatkowej pomocy, pytając nauczycieli lub kolegów"],
            ["a) Okrągłe zero", "b) Kartka i długopis wystarczą", "c) Jeden do wszystkiego", "d) Do każdego przedmiotu osobny"],
            ["a) Czekam aż reszta grupy zrobi", "b) Dzień przed", "c) Tydzień przed", "d) Zaczynam od razu kiedy się o nich dowiem"],
            ["a) Robię wszystko na ostatnią chwilę", "b) Robię coś wtedy gdy mam na to ochotę ", "c) Organizuję dzień, ale nie zawsze trzymam się planu", "d) Jestem bardzo zorganizowany/zorganizowana - planuję każdą godzinę dnia"],
            ["a) Bardzo często", "b) Rzadko ", "c) E-trapez mi wystarcza", "d) Zazwyczaj to ja pomagam innym"]
        ]

        self.punkty_typu_studenta = {
            "a": 1,
            "b": 2,
            "c": 3,
            "d": 4
        }

        self.suma_punktow = 0
        self.current_question = 0

        self.label_question = tk.Label(master, text=self.pytania[self.current_question], justify="left")
        self.label_question.pack(pady=10)

        self.radio_var = tk.StringVar()
        self.radio_var.set(None)  # Ustawienie początkowej wartości na None

        self.radio_buttons = []

        for odpowiedz in self.odpowiedzi[self.current_question]:
            radio_btn = tk.Radiobutton(master, text=odpowiedz, variable=self.radio_var, value=odpowiedz[0].lower())
            radio_btn.pack(anchor="w")
            self.radio_buttons.append(radio_btn)

        self.button_next = tk.Button(master, text="Następne", command=self.next_question)
        self.button_next.pack(side=tk.BOTTOM, pady=10)

    def next_question(self):
        selected_answer = self.radio_var.get()
        if selected_answer:
            self.suma_punktow += self.punkty_typu_studenta[selected_answer]
            self.current_question += 1
